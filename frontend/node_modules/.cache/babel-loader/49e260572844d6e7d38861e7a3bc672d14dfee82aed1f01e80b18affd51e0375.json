{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0441\\u0442\\u0430\\u0441\\u0438\\u044F\\\\test-app\\\\frontend\\\\src\\\\components\\\\AddTreeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTreeForm({\n  user,\n  onTreeAdded\n}) {\n  _s();\n  const [treeData, setTreeData] = useState({\n    location: '',\n    gpsCoordinates: '',\n    typeOfActivity: '',\n    species: '',\n    remarks: ''\n  });\n  const [treeImage, setTreeImage] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTreeData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleImageChange = e => {\n    setTreeImage(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n\n      // Append tree data\n      Object.keys(treeData).forEach(key => {\n        formData.append(key, treeData[key]);\n      });\n\n      // Append image if exists\n      if (treeImage) {\n        formData.append('treeImage', treeImage);\n      }\n\n      // Get user token\n      const token = await user.getIdToken();\n\n      // Send to backend\n      await axios.post('http://localhost:5000/api/trees', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Reset form\n      setTreeData({\n        location: '',\n        gpsCoordinates: '',\n        typeOfActivity: '',\n        species: '',\n        remarks: ''\n      });\n      setTreeImage(null);\n\n      // Notify parent component\n      onTreeAdded();\n    } catch (error) {\n      console.error('Error adding tree:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Location\",\n      value: treeData.location,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"gpsCoordinates\",\n      placeholder: \"GPS Coordinates\",\n      value: treeData.gpsCoordinates,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"typeOfActivity\",\n      placeholder: \"Type of Activity\",\n      value: treeData.typeOfActivity,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"species\",\n      placeholder: \"Tree Species\",\n      value: treeData.species,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"remarks\",\n      placeholder: \"Remarks\",\n      value: treeData.remarks,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"treeImage\",\n      onChange: handleImageChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTreeForm, \"Edq6Mqn7azWvs44IA3+HSb9u4i8=\");\n_c = AddTreeForm;\nexport default AddTreeForm;\nvar _c;\n$RefreshReg$(_c, \"AddTreeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddTreeForm","user","onTreeAdded","_s","treeData","setTreeData","location","gpsCoordinates","typeOfActivity","species","remarks","treeImage","setTreeImage","handleInputChange","e","name","value","target","prev","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","Object","keys","forEach","key","append","token","getIdToken","post","headers","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","accept","_c","$RefreshReg$"],"sources":["C:/Users/Анастасия/test-app/frontend/src/components/AddTreeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AddTreeForm({ user, onTreeAdded }) {\r\n    const [treeData, setTreeData] = useState({\r\n        location: '',\r\n        gpsCoordinates: '',\r\n        typeOfActivity: '',\r\n        species: '',\r\n        remarks: ''\r\n    });\r\n    const [treeImage, setTreeImage] = useState(null);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setTreeData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        setTreeImage(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const formData = new FormData();\r\n            \r\n            // Append tree data\r\n            Object.keys(treeData).forEach(key => {\r\n                formData.append(key, treeData[key]);\r\n            });\r\n            \r\n            // Append image if exists\r\n            if (treeImage) {\r\n                formData.append('treeImage', treeImage);\r\n            }\r\n\r\n            // Get user token\r\n            const token = await user.getIdToken();\r\n\r\n            // Send to backend\r\n            await axios.post('http://localhost:5000/api/trees', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            // Reset form\r\n            setTreeData({\r\n                location: '',\r\n                gpsCoordinates: '',\r\n                typeOfActivity: '',\r\n                species: '',\r\n                remarks: ''\r\n            });\r\n            setTreeImage(null);\r\n\r\n            // Notify parent component\r\n            onTreeAdded();\r\n        } catch (error) {\r\n            console.error('Error adding tree:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add New Tree</h2>\r\n            <input\r\n                type=\"text\"\r\n                name=\"location\"\r\n                placeholder=\"Location\"\r\n                value={treeData.location}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"gpsCoordinates\"\r\n                placeholder=\"GPS Coordinates\"\r\n                value={treeData.gpsCoordinates}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"typeOfActivity\"\r\n                placeholder=\"Type of Activity\"\r\n                value={treeData.typeOfActivity}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"species\"\r\n                placeholder=\"Tree Species\"\r\n                value={treeData.species}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <textarea\r\n                name=\"remarks\"\r\n                placeholder=\"Remarks\"\r\n                value={treeData.remarks}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input\r\n                type=\"file\"\r\n                name=\"treeImage\"\r\n                onChange={handleImageChange}\r\n                accept=\"image/*\"\r\n            />\r\n            <button type=\"submit\">Add Tree</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTreeForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}