{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0441\\u0442\\u0430\\u0441\\u0438\\u044F\\\\test-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport heic2any from 'heic2any';\nimport imageCompression from 'browser-image-compression';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from './firebase-client';\nimport AddTreeForm from './components/AddTreeForm'; // ✅ Import the AddTreeForm component\n\n// Utility functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction normalizeName(name) {\n  name = name.replace(/[^\\w\\s]/g, '').replace(/\\s+/g, ' ').trim().toLowerCase();\n  const classOfMatch = name.match(/\\bclass of (\\d{4})\\b/);\n  const classOfYear = classOfMatch ? classOfMatch[1] : null;\n  name = name.replace(/\\bclass of \\d{4}\\b/g, '').trim();\n  if (name.includes(',')) {\n    const [lastName, firstName] = name.split(',').map(part => part.trim());\n    name = `${firstName} ${lastName}`;\n  } else {\n    const parts = name.split(' ');\n    if (parts.length >= 2) {\n      const lastName = parts[0];\n      const firstName = parts.slice(1).join(' ');\n      name = `${firstName} ${lastName}`;\n    }\n  }\n  if (classOfYear) {\n    name = `${name} class of ${classOfYear}`;\n  }\n  return name;\n}\nfunction formatNameForDisplay(name) {\n  return name.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\n\n// AuthForm Component\nfunction AuthForm({\n  type,\n  onSubmit,\n  error\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [secondName, setSecondName] = useState('');\n  const [year, setYear] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(email, password, firstName, secondName, year);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: type === 'login' ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), type === 'signup' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Second Name\",\n        value: secondName,\n        onChange: e => setSecondName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Year (e.g., 2026)\",\n        value: year,\n        onChange: e => setYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: type === 'login' ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n// Main App Component\n_s(AuthForm, \"OWMJxiuYg/ywnNmyI0de4Iw8zVc=\");\n_c = AuthForm;\nfunction App() {\n  _s2();\n  const [name, setName] = useState('');\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const [user, setUser] = useState(null);\n\n  // Handles user sign-up\n  const handleSignUp = async (email, password, firstName, secondName, year) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      const fullName = `${firstName} ${secondName} - Class of ${year}`;\n      const normalizedName = normalizeName(fullName);\n      setName(normalizedName);\n      setUser(user);\n    } catch (err) {\n      console.error('Sign-up failed:', err);\n      setError('Sign-up failed. Please try again.');\n    }\n  };\n\n  // Handles user login\n  const handleLogin = async (email, password, firstName, secondName, year) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      const fullName = `${firstName} ${secondName} - Class of ${year}`;\n      const normalizedName = normalizeName(fullName);\n      setName(normalizedName);\n      setUser(user);\n    } catch (err) {\n      console.error('Login failed:', err);\n      setError('Login failed. Please check your credentials.');\n    }\n  };\n\n  // Handles user logout\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n      setName('');\n      setData(null);\n    } catch (err) {\n      console.error('Logout failed:', err);\n      setError('Logout failed. Please try again.');\n    }\n  };\n\n  // Fetch user's planted trees\n  useEffect(() => {\n    if (name) {\n      const fetchData = async () => {\n        try {\n          const token = await (user === null || user === void 0 ? void 0 : user.getIdToken());\n          const response = await fetch('http://localhost:5000/api/trees/search', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              ...(token && {\n                'Authorization': `Bearer ${token}`\n              })\n            },\n            body: JSON.stringify({\n              name: \"tserakhava anastasiya class of 2026\"\n            })\n          });\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n          const data = await response.json();\n          console.log(\"Search results:\", data);\n        } catch (error) {\n          console.error('Fetch error:', error);\n        }\n      };\n      fetchData();\n    } else {\n      setData({\n        results: []\n      });\n    }\n  }, [name, user]);\n  // Handle new tree addition (refresh tree list)\n  const handleTreeAdded = async () => {\n    if (name) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/search', {\n          name\n        });\n        setData(response.data);\n      } catch (err) {\n        console.error('Error refreshing trees:', err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tree Tracking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), !user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        type: \"signup\",\n        onSubmit: handleSignUp,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n        type: \"login\",\n        onSubmit: handleLogin,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", formatNameForDisplay(name), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AddTreeForm, {\n        user: user,\n        onTreeAdded: handleTreeAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Planted Trees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPS Coordinates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type of Activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remarks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tree Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.results.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.num\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.gpsCoordinates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.typeOfActivity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.remarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.treeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row.treeImage,\n                  alt: \"Tree\",\n                  style: {\n                    width: '100px',\n                    height: 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"/KsO7dEfECWX1Jpl27WbgRNUzeU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","heic2any","imageCompression","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","auth","AddTreeForm","jsxDEV","_jsxDEV","Fragment","_Fragment","normalizeName","name","replace","trim","toLowerCase","classOfMatch","match","classOfYear","includes","lastName","firstName","split","map","part","parts","length","slice","join","formatNameForDisplay","word","charAt","toUpperCase","AuthForm","type","onSubmit","error","_s","email","setEmail","password","setPassword","setFirstName","secondName","setSecondName","year","setYear","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","required","style","color","_c","App","_s2","setName","data","setData","setError","user","setUser","handleSignUp","userCredential","fullName","normalizedName","err","console","handleLogin","handleLogout","fetchData","token","getIdToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","log","results","handleTreeAdded","post","padding","onClick","onTreeAdded","border","cellPadding","marginTop","row","index","num","date","location","gpsCoordinates","typeOfActivity","species","remarks","treeImage","src","alt","width","height","_c2","$RefreshReg$"],"sources":["C:/Users/Анастасия/test-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport heic2any from 'heic2any';\nimport imageCompression from 'browser-image-compression';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from './firebase-client';\nimport AddTreeForm from './components/AddTreeForm';  // ✅ Import the AddTreeForm component\n\n// Utility functions\nfunction normalizeName(name) {\n    name = name\n        .replace(/[^\\w\\s]/g, '')\n        .replace(/\\s+/g, ' ')\n        .trim()\n        .toLowerCase();\n\n    const classOfMatch = name.match(/\\bclass of (\\d{4})\\b/);\n    const classOfYear = classOfMatch ? classOfMatch[1] : null;\n\n    name = name.replace(/\\bclass of \\d{4}\\b/g, '').trim();\n\n    if (name.includes(',')) {\n        const [lastName, firstName] = name.split(',').map(part => part.trim());\n        name = `${firstName} ${lastName}`;\n    } else {\n        const parts = name.split(' ');\n        if (parts.length >= 2) {\n            const lastName = parts[0];\n            const firstName = parts.slice(1).join(' ');\n            name = `${firstName} ${lastName}`;\n        }\n    }\n\n    if (classOfYear) {\n        name = `${name} class of ${classOfYear}`;\n    }\n\n    return name;\n}\n\nfunction formatNameForDisplay(name) {\n    return name\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' ');\n}\n\n// AuthForm Component\nfunction AuthForm({ type, onSubmit, error }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [secondName, setSecondName] = useState('');\n    const [year, setYear] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(email, password, firstName, secondName, year);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>{type === 'login' ? 'Login' : 'Sign Up'}</h2>\n            <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n            <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n            {type === 'signup' && (\n                <>\n                    <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\n                    <input type=\"text\" placeholder=\"Second Name\" value={secondName} onChange={(e) => setSecondName(e.target.value)} required />\n                    <input type=\"text\" placeholder=\"Year (e.g., 2026)\" value={year} onChange={(e) => setYear(e.target.value)} required />\n                </>\n            )}\n            <button type=\"submit\">{type === 'login' ? 'Login' : 'Sign Up'}</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </form>\n    );\n}\n\n// Main App Component\nfunction App() {\n    \n    const [name, setName] = useState('');\n    const [data, setData] = useState(null);\n    const [error, setError] = useState('');\n    const [user, setUser] = useState(null);\n\n    // Handles user sign-up\n    const handleSignUp = async (email, password, firstName, secondName, year) => {\n        try {\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            const fullName = `${firstName} ${secondName} - Class of ${year}`;\n            const normalizedName = normalizeName(fullName);\n            setName(normalizedName);\n            setUser(user);\n        } catch (err) {\n            console.error('Sign-up failed:', err);\n            setError('Sign-up failed. Please try again.');\n        }\n    };\n\n    // Handles user login\n    const handleLogin = async (email, password, firstName, secondName, year) => {\n        try {\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            const fullName = `${firstName} ${secondName} - Class of ${year}`;\n            const normalizedName = normalizeName(fullName);\n            setName(normalizedName);\n            setUser(user);\n        } catch (err) {\n            console.error('Login failed:', err);\n            setError('Login failed. Please check your credentials.');\n        }\n    };\n\n    // Handles user logout\n    const handleLogout = async () => {\n        try {\n            await signOut(auth);\n            setUser(null);\n            setName('');\n            setData(null);\n        } catch (err) {\n            console.error('Logout failed:', err);\n            setError('Logout failed. Please try again.');\n        }\n    };\n\n    // Fetch user's planted trees\n    useEffect(() => {\n        if (name) {\n            const fetchData = async () => {\n                try {\n                  const token = await user?.getIdToken();\n                  const response = await fetch('http://localhost:5000/api/trees/search', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                      ...(token && { 'Authorization': `Bearer ${token}` })\n                    },\n                    body: JSON.stringify({ name: \"tserakhava anastasiya class of 2026\" })\n                  });\n              \n                  if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n                  const data = await response.json();\n                  console.log(\"Search results:\", data);\n                } catch (error) {\n                  console.error('Fetch error:', error);\n                }\n              };\n            fetchData();\n        } else {\n            setData({ results: [] });\n        }\n    }, [name, user]);\n    // Handle new tree addition (refresh tree list)\n    const handleTreeAdded = async () => {\n        if (name) {\n            try {\n                const response = await axios.post('http://localhost:5000/api/search', { name });\n                setData(response.data);\n            } catch (err) {\n                console.error('Error refreshing trees:', err);\n            }\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Tree Tracking App</h1>\n\n            {!user ? (\n                <>\n                    <AuthForm type=\"signup\" onSubmit={handleSignUp} error={error} />\n                    <AuthForm type=\"login\" onSubmit={handleLogin} error={error} />\n                </>\n            ) : (\n                <div>\n                    <p>Welcome, {formatNameForDisplay(name)}!</p>\n                    <button onClick={handleLogout}>Logout</button>\n\n                    {/* Form to add new trees */}\n                    <AddTreeForm user={user} onTreeAdded={handleTreeAdded} />\n\n                    {/* Display user's planted trees */}\n                    {data && (\n                        <div>\n                            <h2>My Planted Trees</h2>\n                            <table border=\"1\" cellPadding=\"10\" style={{ marginTop: '20px' }}>\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Date</th>\n                                        <th>Location</th>\n                                        <th>GPS Coordinates</th>\n                                        <th>Type of Activity</th>\n                                        <th>Species</th>\n                                        <th>Remarks</th>\n                                        <th>Tree Image</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {data.results.map((row, index) => (\n                                        <tr key={index}>\n                                            <td>{row.num}</td>\n                                            <td>{row.date}</td>\n                                            <td>{row.location}</td>\n                                            <td>{row.gpsCoordinates}</td>\n                                            <td>{row.typeOfActivity}</td>\n                                            <td>{row.species}</td>\n                                            <td>{row.remarks}</td>\n                                            <td>\n                                                {row.treeImage && (\n                                                    <img src={row.treeImage} alt=\"Tree\" style={{ width: '100px', height: 'auto' }} />\n                                                )}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,SAASC,0BAA0B,EAAEC,8BAA8B,EAAEC,OAAO,QAAQ,eAAe;AACnG,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAE;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,aAAaA,CAACC,IAAI,EAAE;EACzBA,IAAI,GAAGA,IAAI,CACNC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBC,IAAI,CAAC,CAAC,CACNC,WAAW,CAAC,CAAC;EAElB,MAAMC,YAAY,GAAGJ,IAAI,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACvD,MAAMC,WAAW,GAAGF,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI;EAEzDJ,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;EAErD,IAAIF,IAAI,CAACO,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpB,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGT,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC;IACtEF,IAAI,GAAG,GAAGS,SAAS,IAAID,QAAQ,EAAE;EACrC,CAAC,MAAM;IACH,MAAMK,KAAK,GAAGb,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIG,KAAK,CAACC,MAAM,IAAI,CAAC,EAAE;MACnB,MAAMN,QAAQ,GAAGK,KAAK,CAAC,CAAC,CAAC;MACzB,MAAMJ,SAAS,GAAGI,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAC1ChB,IAAI,GAAG,GAAGS,SAAS,IAAID,QAAQ,EAAE;IACrC;EACJ;EAEA,IAAIF,WAAW,EAAE;IACbN,IAAI,GAAG,GAAGA,IAAI,aAAaM,WAAW,EAAE;EAC5C;EAEA,OAAON,IAAI;AACf;AAEA,SAASiB,oBAAoBA,CAACjB,IAAI,EAAE;EAChC,OAAOA,IAAI,CACNU,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAACO,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,GAAG,CAAC;AAClB;;AAEA;AACA,SAASK,QAAQA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,SAAS,EAAEqB,YAAY,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgD,IAAI,EAAEC,OAAO,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMkD,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBd,QAAQ,CAACG,KAAK,EAAEE,QAAQ,EAAEnB,SAAS,EAAEsB,UAAU,EAAEE,IAAI,CAAC;EAC1D,CAAC;EAED,oBACIrC,OAAA;IAAM2B,QAAQ,EAAEY,YAAa;IAAAG,QAAA,gBACzB1C,OAAA;MAAA0C,QAAA,EAAKhB,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjD9C,OAAA;MAAO0B,IAAI,EAAC,OAAO;MAACqB,WAAW,EAAC,OAAO;MAACC,KAAK,EAAElB,KAAM;MAACmB,QAAQ,EAAGT,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5G9C,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACqB,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEhB,QAAS;MAACiB,QAAQ,EAAGT,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvHpB,IAAI,KAAK,QAAQ,iBACd1B,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACI1C,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACqB,WAAW,EAAC,YAAY;QAACC,KAAK,EAAEnC,SAAU;QAACoC,QAAQ,EAAGT,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxH9C,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACqB,WAAW,EAAC,aAAa;QAACC,KAAK,EAAEb,UAAW;QAACc,QAAQ,EAAGT,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3H9C,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACqB,WAAW,EAAC,mBAAmB;QAACC,KAAK,EAAEX,IAAK;QAACY,QAAQ,EAAGT,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACvH,CACL,eACD9C,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAgB,QAAA,EAAEhB,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EACtElB,KAAK,iBAAI5B,OAAA;MAAGoD,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEf;;AAEA;AAAAjB,EAAA,CA9BSJ,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA+BjB,SAAS8B,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAEX,MAAM,CAACpD,IAAI,EAAEqD,OAAO,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqE,IAAI,EAAEC,OAAO,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuC,KAAK,EAAEgC,QAAQ,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwE,IAAI,EAAEC,OAAO,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAM0E,YAAY,GAAG,MAAAA,CAAOjC,KAAK,EAAEE,QAAQ,EAAEnB,SAAS,EAAEsB,UAAU,EAAEE,IAAI,KAAK;IACzE,IAAI;MACA,MAAM2B,cAAc,GAAG,MAAMrE,8BAA8B,CAACE,IAAI,EAAEiC,KAAK,EAAEE,QAAQ,CAAC;MAClF,MAAM6B,IAAI,GAAGG,cAAc,CAACH,IAAI;MAChC,MAAMI,QAAQ,GAAG,GAAGpD,SAAS,IAAIsB,UAAU,eAAeE,IAAI,EAAE;MAChE,MAAM6B,cAAc,GAAG/D,aAAa,CAAC8D,QAAQ,CAAC;MAC9CR,OAAO,CAACS,cAAc,CAAC;MACvBJ,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVC,OAAO,CAACxC,KAAK,CAAC,iBAAiB,EAAEuC,GAAG,CAAC;MACrCP,QAAQ,CAAC,mCAAmC,CAAC;IACjD;EACJ,CAAC;;EAED;EACA,MAAMS,WAAW,GAAG,MAAAA,CAAOvC,KAAK,EAAEE,QAAQ,EAAEnB,SAAS,EAAEsB,UAAU,EAAEE,IAAI,KAAK;IACxE,IAAI;MACA,MAAM2B,cAAc,GAAG,MAAMtE,0BAA0B,CAACG,IAAI,EAAEiC,KAAK,EAAEE,QAAQ,CAAC;MAC9E,MAAM6B,IAAI,GAAGG,cAAc,CAACH,IAAI;MAChC,MAAMI,QAAQ,GAAG,GAAGpD,SAAS,IAAIsB,UAAU,eAAeE,IAAI,EAAE;MAChE,MAAM6B,cAAc,GAAG/D,aAAa,CAAC8D,QAAQ,CAAC;MAC9CR,OAAO,CAACS,cAAc,CAAC;MACvBJ,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVC,OAAO,CAACxC,KAAK,CAAC,eAAe,EAAEuC,GAAG,CAAC;MACnCP,QAAQ,CAAC,8CAA8C,CAAC;IAC5D;EACJ,CAAC;;EAED;EACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM1E,OAAO,CAACC,IAAI,CAAC;MACnBiE,OAAO,CAAC,IAAI,CAAC;MACbL,OAAO,CAAC,EAAE,CAAC;MACXE,OAAO,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACVC,OAAO,CAACxC,KAAK,CAAC,gBAAgB,EAAEuC,GAAG,CAAC;MACpCP,QAAQ,CAAC,kCAAkC,CAAC;IAChD;EACJ,CAAC;;EAED;EACAtE,SAAS,CAAC,MAAM;IACZ,IAAIc,IAAI,EAAE;MACN,MAAMmE,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACF,MAAMC,KAAK,GAAG,OAAMX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,UAAU,CAAC,CAAC;UACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;YACrEC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,IAAIL,KAAK,IAAI;gBAAE,eAAe,EAAE,UAAUA,KAAK;cAAG,CAAC;YACrD,CAAC;YACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAE5E,IAAI,EAAE;YAAsC,CAAC;UACtE,CAAC,CAAC;UAEF,IAAI,CAACsE,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;UAC3E,MAAMzB,IAAI,GAAG,MAAMgB,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClChB,OAAO,CAACiB,GAAG,CAAC,iBAAiB,EAAE3B,IAAI,CAAC;QACtC,CAAC,CAAC,OAAO9B,KAAK,EAAE;UACdwC,OAAO,CAACxC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACtC;MACF,CAAC;MACH2C,SAAS,CAAC,CAAC;IACf,CAAC,MAAM;MACHZ,OAAO,CAAC;QAAE2B,OAAO,EAAE;MAAG,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAAClF,IAAI,EAAEyD,IAAI,CAAC,CAAC;EAChB;EACA,MAAM0B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAInF,IAAI,EAAE;MACN,IAAI;QACA,MAAMsE,QAAQ,GAAG,MAAMnF,KAAK,CAACiG,IAAI,CAAC,kCAAkC,EAAE;UAAEpF;QAAK,CAAC,CAAC;QAC/EuD,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVC,OAAO,CAACxC,KAAK,CAAC,yBAAyB,EAAEuC,GAAG,CAAC;MACjD;IACJ;EACJ,CAAC;EAED,oBACInE,OAAA;IAAKoD,KAAK,EAAE;MAAEqC,OAAO,EAAE;IAAO,CAAE;IAAA/C,QAAA,gBAC5B1C,OAAA;MAAA0C,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzB,CAACe,IAAI,gBACF7D,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACI1C,OAAA,CAACyB,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEoC,YAAa;QAACnC,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE9C,OAAA,CAACyB,QAAQ;QAACC,IAAI,EAAC,OAAO;QAACC,QAAQ,EAAE0C,WAAY;QAACzC,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAChE,CAAC,gBAEH9C,OAAA;MAAA0C,QAAA,gBACI1C,OAAA;QAAA0C,QAAA,GAAG,WAAS,EAACrB,oBAAoB,CAACjB,IAAI,CAAC,EAAC,GAAC;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7C9C,OAAA;QAAQ0F,OAAO,EAAEpB,YAAa;QAAA5B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAG9C9C,OAAA,CAACF,WAAW;QAAC+D,IAAI,EAAEA,IAAK;QAAC8B,WAAW,EAAEJ;MAAgB;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGxDY,IAAI,iBACD1D,OAAA;QAAA0C,QAAA,gBACI1C,OAAA;UAAA0C,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB9C,OAAA;UAAO4F,MAAM,EAAC,GAAG;UAACC,WAAW,EAAC,IAAI;UAACzC,KAAK,EAAE;YAAE0C,SAAS,EAAE;UAAO,CAAE;UAAApD,QAAA,gBAC5D1C,OAAA;YAAA0C,QAAA,eACI1C,OAAA;cAAA0C,QAAA,gBACI1C,OAAA;gBAAA0C,QAAA,EAAI;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACV9C,OAAA;gBAAA0C,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb9C,OAAA;gBAAA0C,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjB9C,OAAA;gBAAA0C,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxB9C,OAAA;gBAAA0C,QAAA,EAAI;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzB9C,OAAA;gBAAA0C,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB9C,OAAA;gBAAA0C,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB9C,OAAA;gBAAA0C,QAAA,EAAI;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACR9C,OAAA;YAAA0C,QAAA,EACKgB,IAAI,CAAC4B,OAAO,CAACvE,GAAG,CAAC,CAACgF,GAAG,EAAEC,KAAK,kBACzBhG,OAAA;cAAA0C,QAAA,gBACI1C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACE;cAAG;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClB9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACG;cAAI;gBAAAvD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnB9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACI;cAAQ;gBAAAxD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvB9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACK;cAAc;gBAAAzD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7B9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACM;cAAc;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7B9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACO;cAAO;gBAAA3D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtB9C,OAAA;gBAAA0C,QAAA,EAAKqD,GAAG,CAACQ;cAAO;gBAAA5D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtB9C,OAAA;gBAAA0C,QAAA,EACKqD,GAAG,CAACS,SAAS,iBACVxG,OAAA;kBAAKyG,GAAG,EAAEV,GAAG,CAACS,SAAU;kBAACE,GAAG,EAAC,MAAM;kBAACtD,KAAK,EAAE;oBAAEuD,KAAK,EAAE,OAAO;oBAAEC,MAAM,EAAE;kBAAO;gBAAE;kBAAAjE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cACnF;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAZAkD,KAAK;cAAArD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACU,GAAA,CApJQD,GAAG;AAAAsD,GAAA,GAAHtD,GAAG;AAsJZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAuD,GAAA;AAAAC,YAAA,CAAAxD,EAAA;AAAAwD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}